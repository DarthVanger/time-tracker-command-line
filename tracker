#!/bin/bash

log_file=~/time-log.txt

function log_by_day () {
  day=''
  previous_day=''
  minutesWorkedThisDay='0'
  logIsOneDayOnly=true
  while read line; do
    previous_day="$day"
    day=$(echo "$line" | cut -d 'T' -f 1)
    if [ "$day" != "$previous_day" ] && [ "$previous_day" != '' ]
    then
      logIsOneDayOnly=false
      echo "$previous_day: worked $(($minutesWorkedThisDay / 60)) hours and $(($minutesWorkedThisDay % 60)) min"
      minutesWorkedThisDay='0'
    fi
    startOrEnd=$(echo "$line"  | cut -d ' ' -f 2)
    if [ $startOrEnd = 'start' ]
    then
      startTime=$(echo "$line" | cut -d 'T' -f 2 | cut -d ' ' -f 1)
      startHours=$(echo "$startTime" | cut -d ':' -f1 | sed -e 's/^0//')
      startMinutes=$(echo "$startTime" | cut -d ':' -f2 | sed -e 's/^0//')
    else
      endTime=$(echo "$line" | cut -d 'T' -f 2 | cut -d ' ' -f 1) 
      endHours=$(echo "$endTime" | cut -d ':' -f1 | sed -e 's/^0//')
      endMinutes=$(echo "$endTime" | cut -d ':' -f2 | sed -e 's/^0//')
      hoursDiff=$((endHours - startHours))
      minutesDiff=$((endMinutes - startMinutes))
      minutesWorked=$((hoursDiff * 60 + minutesDiff))
      minutesWorkedThisDay=$((minutesWorkedThisDay + minutesWorked))
    fi
  done <"$log_file"
  if [ "$logIsOneDayOnly" = true ]
  then
    echo "$previous_day: worked $(($minutesWorkedThisDay / 60)) hours and $(($minutesWorkedThisDay % 60)) min"
  fi
}

case "$1" in
  "start")
    echo `date +%FT%T` start >> "$log_file"
    tail -1 "$log_file"
    ;;
  "stop")
    echo `date +%FT%T` stop >> "$log_file"
    tail -1 "$log_file"
    ;;
  "log")
    log_by_day
    ;;
  *)
    exit 1
    ;;
esac
